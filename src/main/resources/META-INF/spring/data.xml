<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- the DataSource (parameterized for configuration via a PropertyPlaceHolderConfigurer) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="${database.driverClassName}" p:url="${database.url}"
		p:username="${database.username}" p:password="${database.password}" />

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<!-- "create" to build a new database on each run; 
					 "update" to modify an existing database; 
					 "create-drop" means the same as "create" but also drops tables when Hibernate closes;
					 "validate" makes no changes to the database -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.connection.charSet">UTF-8</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
			</props>
		</property>
	</bean>
	
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="jdbcUserService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<security:jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
		users-by-username-query="select username, password, enabled from user where username = ?"
		authorities-by-username-query="select user_username, roles_authority from user_role where user_username = ?" />
		
	<!-- COMMENT OUT IF NOT RUNNING IN MEMORY -->
	<!-- Creates an in-memory HSQLDB Database -->
	<jdbc:embedded-database id="dataSource"/>
		
</beans>
